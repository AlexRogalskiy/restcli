name: Auto release

on:
  push:
    # Sequence of patterns matched against refs/tags
    branches:
      - 'dev-*'
  workflow_dispatch:
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.0
        with:
          # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
          java-version: 11.0.3

      - name: Build project
        run: |
          ./gradlew clean jar
          zip --junk-paths restcli build/libs/*.jar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_NUMBER: ${GITHUB_RUN_NUMBER}
        with:
          tag_name: ${{ github.ref }}-${{ env.GITHUB_RUN_NUMBER }}
          release_name: Release ${{ github.ref }}-${{ env.GITHUB_RUN_NUMBER }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./restcli.zip
          asset_name: restcli.zip
          asset_content_type: application/zip
